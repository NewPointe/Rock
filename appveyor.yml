#---------------------------------#
#            Rock RMS             #
#---------------------------------#

# Version Format
version: 0.1.{build}

# Don't increment build number for pull requests
pull_requests:
  do_not_increment_build_number: true

# Do not build on tags
skip_tags: true

# Build VM template
image: Visual Studio 2017

# Build configuration
configuration: Release
platform: Any CPU

# Shallow clone to reduce download time
shallow_clone: true
clone_folder: C:\projects\Rock

# Cache some things to speed up builds
# I don't think this actually speeds anything up
cache:
- packages -> **\packages.config # cache the packages folder unless a project changes package dependancies
- C:\Users\appveyor\AppData\Local\NuGet\Cache # always cache the nuget cache


# Make sure all dependancies are available before build
before_build:
- ps: >-
    if (Test-Path 'C:\Tools\NuGet3') { $nugetDir = 'C:\Tools\NuGet3' } else { $nugetDir = 'C:\Tools\NuGet' }
    
    (New-Object Net.WebClient).DownloadFile('https://dist.nuget.org/win-x86-commandline/v3.3.0/nuget.exe', "$nugetDir\NuGet.exe")
    
    nuget restore Rock.sln
    
    $src = "C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2\Facades"
    
    $dst = "C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5.2"
    
    Get-ChildItem $src | Copy-Item -Destination $dst -Force
 
# More build configuration
build:
  project: Rock.sln
  publish_wap: false
  parallel: true
  verbosity: minimal

# Save the RockWeb folder as an artifact for deployment
artifacts:
- path: RockWeb
  name: RockWeb

# Stop matrix builds if one of them has an error
matrix:
  fast_finish: true

# Tests
test:
  assemblies:
  - Rock.Tests\**\*.dll

# Skip commits for static repository files
skip_commits:
  files:
    - '.github/'
    - '**/README.markdown'
    - '**/README.md'